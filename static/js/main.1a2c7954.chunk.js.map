{"version":3,"sources":["components/Header.js","components/Courses.js","bin/auth.js","components/DeleteCourse.js","components/CourseDetails.js","components/ValidationErrors.js","components/EditCourseDetails.js","components/UserSignUp.js","components/UserSignIn.js","components/UserSignOut.js","components/PrivateRoute.js","components/NotFound.js","components/Forbidden.js","components/UnhandledError.js","App.js","serviceWorker.js","index.js"],"names":["Header","loginForm","user","emailAddress","firstName","lastName","className","to","href","Courses","state","courseComponents","addCourseButton","props","authenticated","version","xmlns","x","y","viewBox","points","axios","get","this","serverLocation","courses","data","map","course","key","id","title","setState","Component","getAuthHeaders","Cookies","password","Authorization","base64","encode","authSignUp","form","a","post","authSignIn","headers","response","console","log","status","DeleteCourse","redirect","courseId","match","params","getResponse","userId","User","method","url","history","push","withRouter","CourseDetails","Object","keys","length","isUserOwner","source","description","estimatedTime","materialsNeeded","ValidationErrors","errors","errorMessages","error","index","require","EditCourseDetails","validationErrors","onChange","e","target","name","value","cancelForm","purpose","submitForm","preventDefault","saveCourse","charAt","toUpperCase","slice","onSubmit","type","placeholder","onClick","UserSignUp","confirmPassword","addValidationError","prevState","forEach","formElement","result","replace","prettyFormElement","toLowerCase","userSignUp","UserSignIn","redirectPath","userSignIn","locationState","location","from","UserSignOut","cookies","userSignOut","remove","path","PrivateRoute","RenderComponent","render","rest","pathname","NotFound","Forbidden","UnhandledError","App","signUp","signIn","set","signOut","message","exact","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1a2c7954.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({ user }) => {\n  let loginForm;\n  // if user is not logged in\n  if (!user.emailAddress) {\n    loginForm = (\n      <nav>\n        <a className=\"signup\" href=\"/signup\">\n          Sign Up\n        </a>\n        <a className=\"signin\" href=\"/signin\">\n          Sign In\n        </a>\n      </nav>\n    );\n  } else {\n    // if user is logged in\n    loginForm = (\n      <nav>\n        <span>\n          Welcome {user.firstName} {user.lastName}!\n        </span>\n        <Link className=\"signout\" to=\"/signout\">\n          Sign Out\n        </Link>\n      </nav>\n    );\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"bounds\">\n        <h1 className=\"header--logo\">\n          <Link to=\"/\">Courses</Link>\n        </h1>\n        {loginForm}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class Courses extends Component {\n  state = {\n    courseComponents: [],\n  };\n\n  async componentDidMount() {\n    // get course list\n    const courses = await axios.get(`${this.props.serverLocation}/api/courses`);\n\n    // map courses to a list\n    const courseComponents = courses.data.map((course) => (\n      <div className=\"grid-33\" key={course.id}>\n        <Link\n          className=\"course--module course--link\"\n          to={`/courses/${course.id}`}\n        >\n          <h4 className=\"course--label\">Course</h4>\n          <h3 className=\"course--title\">{course.title}</h3>\n        </Link>\n      </div>\n    ));\n\n    // save courses in state\n    this.setState(() => ({ courseComponents }));\n  }\n\n  // give the user the ability to create a course\n  addCourseButton = () => {\n    // only give the option to add a course if the user is signed in\n    if (this.props.user.authenticated) {\n      return (\n        <div className=\"grid-33\">\n          <Link\n            className=\"course--module course--add--module\"\n            to=\"/courses/new\"\n          >\n            <h3 className=\"course--add--title\">\n              <svg\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 13 13\"\n                className=\"add\"\n              >\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n              </svg>\n              New Course\n            </h3>\n          </Link>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bounds\">\n        {this.state.courseComponents}\n        {this.addCourseButton()}\n      </div>\n    );\n  }\n}\n","import base64 from \"base-64\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\n/**\n * helper function to create the auth headers for use in axios requests\n * @param {string} emailAddress\n * @param {string} password\n */\nconst getAuthHeaders = (emailAddress, password) => {\n  return {\n    Authorization: `Basic ${base64.encode(`${emailAddress}:${password}`)}`,\n  };\n};\n\n/**\n * send credentials to the database to sign up a user\n * sets state with\n * @param {object} form - user sign-up form\n * @return {object} signed-up user\n */\nconst authSignUp = async (form, serverLocation) => {\n  try {\n    const response = await axios.post(`${serverLocation}/api/users`, {\n      ...form,\n    });\n    return {\n      user: {\n        authenticated: true,\n        emailAddress: form.emailAddress,\n        password: form.password,\n        firstName: form.firstName,\n        lastName: form.lastName,\n      },\n    };\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * authenticates user credentials with server\n * if favorable response, sets user in state & cookies\n * @param {object} form - user sign-in form\n * @param {string} serverLocation - url to access the server\n * @return {object} authenticated user\n */\nconst authSignIn = async (form, serverLocation) => {\n  const { emailAddress, password } = form;\n  try {\n    const response = await axios.get(`${serverLocation}/api/users`, {\n      headers: getAuthHeaders(emailAddress, password),\n    });\n    console.log(response);\n\n    if (response.status === 200) {\n      response.data.user.password = password;\n      response.data.user.authenticated = true;\n      return { user: response.data.user };\n    }\n  } catch (error) {\n    return false;\n  }\n};\n\nexport { getAuthHeaders, authSignUp, authSignIn };\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { getAuthHeaders } from \"../bin/auth\";\n\nclass DeleteCourse extends Component {\n  state = {\n    redirect: true,\n  };\n\n  async componentDidMount() {\n    const { courseId } = this.props.match.params;\n    const { user } = this.props;\n\n    // get course to delete\n    const getResponse = await axios.get(\n      `${this.props.serverLocation}/api/courses/${courseId}`\n    );\n    if (getResponse.status !== 404) {\n      // if course exists\n      const course = getResponse.data;\n\n      // if user owns course\n      if (this.props.user.userId === course.User.id) {\n        try {\n          // attempt deleting the course\n          await axios({\n            method: \"delete\",\n            url: `${this.props.serverLocation}/api/courses/${courseId}`,\n            headers: getAuthHeaders(user.emailAddress, user.password),\n          });\n          // course successfully deleted\n          this.props.history.push(\"/courses\");\n        } catch (error) {\n          // if error, redirect to error path\n          this.props.history.push(\"/error\");\n        }\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(DeleteCourse);\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport axios from \"axios\";\n// props.match.params.courseId\n\nexport default class CourseDetails extends Component {\n  state = {\n    course: {},\n  };\n\n  async componentDidMount() {\n    const { courseId } = this.props.match.params;\n    const { data } = await axios.get(\n      `${this.props.serverLocation}/api/courses/${courseId}`\n    );\n    this.setState({ course: data });\n  }\n\n  /**\n   * determine if user owns the current course to show the update/delete buttons\n   */\n  isUserOwner() {\n    try {\n      const user = this.state.course.User;\n\n      const authenticatedUser = this.props.user.userId;\n      const ownerUser = user.id;\n      if (authenticatedUser === ownerUser) {\n        return (\n          <span>\n            <Link\n              className=\"button\"\n              to={`/courses/${this.state.course.id}/update`}\n            >\n              Update Course\n            </Link>\n            <Link\n              className=\"button\"\n              to={`/courses/${this.state.course.id}/delete`}\n            >\n              Delete Course\n            </Link>\n          </span>\n        );\n      } else {\n        return <span></span>;\n      }\n    } catch {\n      return <span></span>;\n    }\n  }\n\n  render() {\n    const course = this.state.course;\n    if (Object.keys(course).length > 0) {\n      return (\n        <div>\n          <div className=\"actions--bar\">\n            <div className=\"bounds\">\n              <div className=\"grid-100\">\n                {this.isUserOwner()}\n                <Link className=\"button button-secondary\" to=\"/\">\n                  Return to List\n                </Link>\n              </div>\n            </div>\n          </div>\n          <div className=\"bounds course--detail\">\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <h3 className=\"course--title\">{course.title}</h3>\n                <p>\n                  By {course.User.firstName} {course.User.lastName}\n                </p>\n              </div>\n              <div className=\"course--description\">\n                <ReactMarkdown source={course.description} />\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  {/* only show estimated time if it has been specified */}\n                  {(() => {\n                    if (course.estimatedTime) {\n                      return (\n                        <li className=\"course--stats--list--item\">\n                          <h4>Estimated Time</h4>\n                          <h3>{course.estimatedTime}</h3>\n                        </li>\n                      );\n                    }\n                  })()}\n\n                  {/* only show materials needed if they have been specified */}\n                  {(() => {\n                    if (course.materialsNeeded) {\n                      return (\n                        <li className=\"course--stats--list--item\">\n                          <h4>Materials Needed</h4>\n                          <ReactMarkdown source={course.materialsNeeded} />\n                        </li>\n                      );\n                    }\n                  })()}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n","import React from \"react\";\n\n/**\n * displays list of validation errors\n * @param {array} param0 error messages to display\n */\nexport default function ValidationErrors({ errors }) {\n  if (errors) {\n    const errorMessages = errors.map((error, index) => {\n      return <li key={index}>{error}</li>;\n    });\n    return (\n      <div className=\"validation-errors\">\n        <ul>{errorMessages}</ul>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nconst axios = require(\"axios\");\n\nclass EditCourseDetails extends Component {\n  state = {\n    validationErrors: [],\n    course: {\n      title: \"\",\n      description: \"\",\n      estimatedTime: \"\",\n      materialsNeeded: \"\",\n    },\n    user: {\n      firstName: \"\",\n      lastName: \"\",\n      id: \"\",\n      emailAddress: \"\",\n    },\n  };\n\n  async componentDidMount() {\n    // download current course\n    if (this.props.purpose === \"update\") {\n      const { courseId } = this.props.match.params;\n      const course = await axios.get(\n        `${this.props.serverLocation}/api/courses/${courseId}`\n      );\n      this.setState({ course: course.data });\n      this.setState({ user: course.data.User });\n    } else {\n      this.setState({\n        course: {\n          title: \"\",\n          description: \"\",\n          materialsNeeded: \"\",\n          estimatedTime: \"\",\n        },\n        user: this.props.user,\n      });\n    }\n\n    // capitalize purpose for display\n    const purpose =\n      this.props.purpose.charAt(0).toUpperCase() + this.props.purpose.slice(1);\n    this.setState({ purpose });\n  }\n\n  // update state to reflect form\n  onChange = (e) => {\n    const course = this.state.course;\n    course[e.target.name] = e.target.value;\n    this.setState({ course });\n  };\n\n  cancelForm = (e) => {\n    let url;\n    if (this.state.purpose === \"create\") {\n      url = \"/courses\";\n    } else {\n      url = `/courses/${this.state.course.id}`;\n    }\n    this.props.history.push(url);\n  };\n\n  submitForm = async (e) => {\n    e.preventDefault();\n    const { title, description } = this.state.course;\n    const validationErrors = [];\n\n    // check for required fields\n    if (title === \"\") validationErrors.push(\"Title cannot be empty\");\n    if (description === \"\")\n      validationErrors.push(\"Description cannot be empty\");\n\n    // check for validation errors\n    if (validationErrors.length === 0) {\n      const response = await this.props.saveCourse(\n        this.state.course,\n        this.props.purpose\n      );\n      // if good response\n      if (response.status === 200) {\n        this.props.history.push(`/courses/${response.data.id}`);\n      } else {\n        this.setState({\n          validationErrors: [\"Error saving course. Please try again.\"],\n        });\n      }\n    } else {\n      this.setState({ validationErrors });\n    }\n  };\n\n  render() {\n    const { course } = this.state;\n    const user = this.state.user || {};\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>{this.state.purpose} Course</h1>\n        <div>\n          <ValidationErrors errors={this.state.validationErrors} />\n          <form onSubmit={this.submitForm}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title (required)\"\n                    value={course.title}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <p>\n                  By {user.firstName} {user.lastName}\n                </p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description (required)\"\n                    onChange={this.onChange}\n                    value={course.description}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        value={course.estimatedTime}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        value={course.materialsNeeded}\n                        onChange={this.onChange}\n                      ></textarea>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                {this.state.purpose} Course\n              </button>\n              <button\n                className=\"button button-secondary\"\n                onClick={this.cancelForm}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EditCourseDetails);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nclass UserSignUp extends Component {\n  state = {\n    validationErrors: [],\n    form: {\n      firstName: \"\",\n      lastName: \"\",\n      emailAddress: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  };\n\n  onChange = (e) => {\n    const form = this.state.form;\n    form[e.target.name] = e.target.value;\n    this.setState({ form });\n  };\n\n  addValidationError = async (error) => {\n    this.setState((prevState) => ({\n      validationErrors: [...prevState.validationErrors, error],\n    }));\n  };\n\n  submitForm = async (e) => {\n    e.preventDefault();\n    const { form } = this.state;\n\n    //delete current form validation errors\n    this.setState({ validationErrors: [] });\n\n    const validationErrors = [];\n\n    // check that password was correctly entered twice\n    if (form.password !== form.confirmPassword) {\n      validationErrors.push(\"Passwords do not match\");\n    }\n\n    // validate data\n\n    Object.keys(form).forEach(async (formElement) => {\n      if (this.state.form[formElement] === \"\") {\n        //convert camelCase to caps case\n        var result = formElement.replace(/([A-Z])/g, \" $1\");\n        var prettyFormElement =\n          result.charAt(0).toUpperCase() + result.slice(1);\n\n        validationErrors.push(`${prettyFormElement} cannot be empty`);\n      }\n    });\n\n    if (validationErrors.length === 0) {\n      const { form } = this.state;\n      form.emailAddress = form.emailAddress.toLowerCase();\n      const response = await this.props.userSignUp(form);\n\n      if (response) {\n        //redirect to main page\n        this.props.history.push(\"/courses\");\n      } else {\n        this.setState({\n          validationErrors: [\"Unknown problem. Please try again\"],\n        });\n      }\n    } else {\n      this.setState({ validationErrors });\n    }\n  };\n\n  render() {\n    const { form } = this.state;\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <ValidationErrors errors={this.state.validationErrors} />\n          <div>\n            <p>*All fields required</p>\n            <form onSubmit={this.submitForm}>\n              <div>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  className=\"\"\n                  placeholder=\"First Name\"\n                  onChange={this.onChange}\n                  value={form.firstName}\n                />\n              </div>\n              <div>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  className=\"\"\n                  placeholder=\"Last Name\"\n                  onChange={this.onChange}\n                  value={form.lastName}\n                />\n              </div>\n              <div>\n                <input\n                  id=\"emailAddress\"\n                  name=\"emailAddress\"\n                  type=\"text\"\n                  className=\"\"\n                  placeholder=\"Email Address\"\n                  onChange={this.onChange}\n                  value={form.emailAddress}\n                />\n              </div>\n              <div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"\"\n                  placeholder=\"Password\"\n                  onChange={this.onChange}\n                  value={form.password}\n                />\n              </div>\n              <div>\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  className=\"\"\n                  placeholder=\"Confirm Password\"\n                  onChange={this.onChange}\n                  value={form.confirmPassword}\n                />\n              </div>\n              <div className=\"grid-100 pad-bottom\">\n                <button className=\"button\" type=\"submit\">\n                  Sign Up\n                </button>\n              </div>\n            </form>\n          </div>\n          <p>&nbsp;</p>\n          <p>\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to\n            sign in!\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UserSignUp);\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default class UserSignIn extends Component {\n  state = {\n    user: {\n      emailAddress: \"\",\n      password: \"\",\n    },\n    validationErrors: [],\n    redirectPath: \"\",\n  };\n\n  onChange = (e) => {\n    //update state to reflect form\n    const { user } = this.state;\n    user[e.target.name] = e.target.value;\n    this.setState({ user });\n  };\n\n  submitForm = async (e) => {\n    e.preventDefault();\n    //attempt sign-in\n    const response = await this.props.userSignIn(this.state.user);\n    if (response === true) {\n      // if a protected route was previously attempted, redirect to it now\n      // otherwise redirect to '/courses'\n      const locationState = this.props.location.state || {};\n      const from = locationState.from || \"/courses\";\n      this.props.history.push(from);\n    } else {\n      this.setState({ validationErrors: [\"Email or password incorrect\"] });\n    }\n  };\n\n  render() {\n    const { user } = this.state;\n    if (this.props.user.authenticated) {\n      return <Redirect to=\"/courses\" />;\n    } else {\n      return (\n        <div className=\"bounds\">\n          <div className=\"grid-33 centered signin\">\n            <h1>Sign In</h1>\n            <div>\n              <ValidationErrors errors={this.state.validationErrors} />\n              <form onSubmit={this.submitForm}>\n                <div>\n                  <input\n                    id=\"emailAddress\"\n                    name=\"emailAddress\"\n                    type=\"text\"\n                    className=\"\"\n                    placeholder=\"Email Address\"\n                    value={user.emailAddress}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    className=\"\"\n                    placeholder=\"Password\"\n                    value={user.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"grid-100 pad-bottom\">\n                  <button className=\"button\" type=\"submit\">\n                    Sign In\n                  </button>\n                  <button className=\"button button-secondary\">Cancel</button>\n                </div>\n              </form>\n            </div>\n            <p>&nbsp;</p>\n            <p>\n              Don't have a user account? <Link to=\"/signup\">Click here</Link> to\n              sign up!\n            </p>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nexport default function UserSignOut(props) {\n  const { cookies, userSignOut } = props;\n  cookies.remove('emailAddress', { path: '/' });\n  cookies.remove('password', { path: '/' });\n  userSignOut();\n  return (\n    <Redirect to=\"/\" />\n  )\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n/**\n * allows access to private routes only if the user is authenticated\n */\nconst PrivateRoute = ({ render: RenderComponent, user, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      user = user || {};\n      if (user.authenticated) {\n        props.user = user; //pass authenticated user down to component\n        return <RenderComponent {...props} />;\n      } else {\n        return (\n          <Redirect\n            to={{\n              pathname: \"/forbidden\",\n              state: { from: props.location }, // pass attempted path\n            }}\n          />\n        );\n      }\n    }}\n  />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * display user-friendly message for 404\n */\nexport default function NotFound() {\n  return (\n    <div className=\"not-found\">\n      <h1>Sorry, this page wasn't found</h1>\n      <Link className=\"button\" to=\"/courses\">\n        {\"<— Go back home\"}\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * display user-friendly error message for forbidden path\n */\nexport default function Forbidden(props) {\n  return (\n    <div className=\"not-found\">\n      <h1>To access this page, you must sign in</h1>\n      <Link\n        className=\"button\"\n        to={{\n          pathname: \"/signin\",\n          state: { from: props.location.state.from.pathname },\n        }}\n      >\n        Go sign in\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * displays user-friendly message for unhandled errors\n */\nexport default function UnhandledError() {\n  return (\n    <div className=\"not-found\">\n      <h1>500 Server Error</h1>\n      <Link className=\"button\" to=\"/courses\">\n        {\"<— Go back home\"}\n      </Link>\n    </div>\n  );\n}\n","/* Coded by James Hall\n * as part of the TeamTreehouse Full Stack JS final project\n * Apr 27, 2020\n */\n\nimport React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nimport \"./global.css\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// Import components\nimport Header from \"./components/Header\";\n\nimport Courses from \"./components/Courses\";\nimport DeleteCourse from \"./components/DeleteCourse\";\nimport CourseDetails from \"./components/CourseDetails\";\nimport EditCourseDetails from \"./components/EditCourseDetails\";\n\nimport UserSignUp from \"./components/UserSignUp\";\nimport UserSignIn from \"./components/UserSignIn\";\nimport UserSignOut from \"./components/UserSignOut\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport NotFound from \"./components/NotFound\";\nimport Forbidden from \"./components/Forbidden\";\nimport UnhandledError from \"./components/UnhandledError\";\n\nimport { authSignUp, authSignIn, getAuthHeaders } from \"./bin/auth\";\n\nconst cookies = new Cookies();\n\nclass App extends Component {\n  state = {\n    user: {\n      authenticated: false,\n    },\n    serverLocation: \"https://treehouse-project9.glitch.me\",\n  };\n\n  componentDidMount() {\n    // get credentials from cookies, and attempt to sign in with them\n    const emailAddress = cookies.get(\"emailAddress\");\n    const password = cookies.get(\"password\");\n    this.signIn({ emailAddress, password });\n  }\n\n  /**\n   * sign up for user account\n   */\n  signUp = async (form) => {\n    const result = await authSignUp(form, this.state.serverLocation);\n    if (result) {\n      this.signIn(form);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * sign in to existing user account\n   */\n  signIn = async (form) => {\n    const result = await authSignIn(form, this.state.serverLocation);\n    if (result) {\n      this.setState(result);\n\n      cookies.set(\"emailAddress\", form.emailAddress, { path: \"/\" });\n      cookies.set(\"password\", form.password, { path: \"/\" });\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  /**\n   * sign out of user account\n   */\n  signOut = () => {\n    this.setState({\n      user: {\n        authenticated: false,\n      },\n    });\n  };\n\n  /**\n   * create or update existing course\n   */\n  saveCourse = async (course, purpose) => {\n    const { emailAddress, password } = this.state.user;\n    const { title, description, estimatedTime, materialsNeeded } = course;\n    let method, url;\n\n    if (purpose === \"create\") {\n      method = \"post\";\n      url = `${this.state.serverLocation}/api/courses`;\n    } else if (purpose === \"update\") {\n      // check that user owns course\n      if (course.User.emailAddress !== emailAddress) {\n        return {\n          status: 401,\n          message: \"User does not own this course\",\n        };\n      } else {\n        method = \"put\";\n        url = `${this.state.serverLocation}/api/courses/${course.id}`;\n      }\n    }\n    // send put/post request\n    const response = await axios({\n      method,\n      url,\n      headers: getAuthHeaders(emailAddress, password),\n      data: {\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded,\n      },\n    });\n\n    return response;\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header user={this.state.user} />\n\n          <Switch>\n            {/* view courses */}\n            <Route\n              exact\n              path=\"/courses\"\n              render={() => (\n                <Courses\n                  user={this.state.user}\n                  serverLocation={this.state.serverLocation}\n                />\n              )}\n            />\n\n            {/* create new course */}\n            <PrivateRoute\n              exact\n              path=\"/courses/new\"\n              user={this.state.user}\n              render={(props) => (\n                <EditCourseDetails\n                  purpose=\"create\"\n                  saveCourse={this.saveCourse}\n                  history={props.history}\n                  user={this.state.user}\n                  serverLocation={this.state.serverLocation}\n                />\n              )}\n            />\n\n            {/* view individual course details */}\n            <Route\n              exact\n              path=\"/courses/:courseId\"\n              render={(props) => (\n                <CourseDetails\n                  match={props.match}\n                  user={this.state.user}\n                  serverLocation={this.state.serverLocation}\n                />\n              )}\n            />\n\n            {/* update individual course details */}\n            <PrivateRoute\n              exact\n              path=\"/courses/:courseId/update\"\n              user={this.state.user}\n              render={(props) => (\n                <EditCourseDetails\n                  match={props.match}\n                  purpose=\"update\"\n                  saveCourse={this.saveCourse}\n                  user={this.state.user}\n                  serverLocation={this.state.serverLocation}\n                />\n              )}\n            />\n\n            {/* delete individual course */}\n            <PrivateRoute\n              exact\n              path=\"/courses/:courseId/delete\"\n              user={this.state.user}\n              render={(props) => (\n                <DeleteCourse\n                  match={props.match}\n                  user={this.state.user}\n                  serverLocation={this.state.serverLocation}\n                />\n              )}\n            />\n\n            {/* sign up for a user account */}\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => <UserSignUp userSignUp={this.signUp} />}\n            />\n\n            {/* sign in to an existing user account */}\n            <Route\n              exact\n              path=\"/signin\"\n              render={(props) => {\n                return (\n                  <UserSignIn\n                    userSignIn={this.signIn}\n                    history={props.history}\n                    user={this.state.user}\n                    {...props}\n                  />\n                );\n              }}\n            />\n\n            {/* sign out user */}\n            <Route\n              exact\n              path=\"/signout\"\n              render={() => (\n                <UserSignOut userSignOut={this.signOut} cookies={cookies} />\n              )}\n            />\n\n            {/* redirect '/' route to /courses */}\n            <Route exact path=\"/\" render={() => <Redirect to=\"/courses\" />} />\n\n            {/* forbidden */}\n            <Route path=\"/forbidden\" component={Forbidden} />\n\n            {/*error route */}\n            <Route path=\"/error\" component={UnhandledError} />\n\n            {/*catch all other routes */}\n            <Route render={() => <NotFound />} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}